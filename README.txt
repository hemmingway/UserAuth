
UserAuth 模块描述

功能概述  
`UserAuth` 是一个面向医疗设备软件的高安全性用户认证与权限管理模块，提供完整的用户生命周期管理、多因素认证（MFA）支持、细粒度权限控制及审计日志功能。其设计符合医疗设备安全标准（如 IEC 62304），确保敏感操作的可追溯性与系统访问的安全性。


核心功能

1. 用户认证  
   - 登录与注销：支持用户名/密码认证，集成动态口令（TOTP）实现多因素验证（MFA）。
   - 会话管理：自动会话超时（默认30分钟），支持活跃操作重置计时器。
   - 防暴力破解：连续5次失败登录触发账户锁定，需管理员手动解锁。

2. 权限管理  
   - 角色分级：预定义 `Guest`（访客）、`Operator`（操作员）、`Admin`（管理员）三级角色。
   - 权限检查：通过 `hasPermission()` 动态验证用户操作权限。

3. 用户管理（仅管理员）  
   - 账户操作：创建/删除用户、重置密码、解锁账户。
   - 密码策略：支持正则表达式定义密码复杂度（默认要求：8位以上，含大小写字母、数字及特殊符号）。

4. 安全增强  
   - 密码存储：使用 PBKDF2-SHA256 加密，迭代次数10,000次，动态盐值生成。
   - 输入验证：过滤非法字符（正则表达式 `^[a-zA-Z0-9_@.-]+$`），防止注入攻击。
   - 审计日志：所有操作记录均通过 HMAC-SHA256 签名，确保日志完整性。

5. 审计与合规  
   - 操作日志：记录关键事件（如登录、密码重置），支持日志签名存储。
   - 合规性：支持强制密码重置、会话超时策略，满足医疗监管要求。


技术实现

- 加密算法：基于 Qt 的 `QPasswordDigestor` 实现 PBKDF2 密钥派生，`QCryptographicHash` 提供哈希支持。
- 跨平台存储：依赖 `SecureKeyStorage` 类安全存储密钥（Windows DPAPI / Linux libsecret）。
- 动态口令：集成 `TOTPGenerator` 类生成符合 RFC 6238 的6位动态码，支持±30秒时间窗口容错。


使用场景

- 医疗设备控制台：限制未授权人员访问高危操作（如设备参数配置）。
- 患者数据管理：通过角色分级控制电子病历访问权限。
- 审计追溯：签名日志可用于合规性审查或安全事件溯源。


代码示例
// 初始化
UserAuth auth;

// 用户登录（启用MFA）
bool success = auth.login("admin", "P@ssw0rd123", "123456");

// 权限检查
if (auth.hasPermission(UserAuth::Admin)) {
    auth.createUser("nurse", UserAuth::Operator, "TempPass123!");
}

// 记录审计日志
auth.logActivity("查看患者数据");


安全合规

- IEC 62304 兼容：满足医疗软件对身份验证、数据完整性的要求。
- GDPR 适配：通过审计日志签名和敏感信息脱敏（如密码重置日志）保护用户隐私。


通过模块化设计与分层安全机制，`UserAuth` 为医疗设备提供了可靠的身份认证与访问控制解决方案，兼顾功能性与合规性。

